<?php

class Hexdumper
{
    public function hexdump($bin, $indent=0, $width=32)
    {
        $hex = $this->printHex($bin, $width);
        $asc = $this->printAsc($bin, $width);
        $out = str_repeat("\t", $indent);
        $out .= str_pad($hex, 80, ' '); 
        $out .= str_pad($asc, 32, ' '); 
        $out .= "\n";
        return $out;
    }
    
    protected function printHex($row, $width)
    {
        $hexstr = bin2hex($row);
        return chunk_split($hexstr, 4, ' ');
    }
    
    protected function printAsc($row, $width)
    {
        $string = '';
        $width = strlen($row);
        $ordchars = '0123456789ABCDEFGHIJKLMNOPQRSTUV';
        for($i = 0; $i < $width; $i++)
        {
            if(ord($row{$i}) == 0)
            {
                // nulls
                $string .= $this->highlight('.', 31); // red  
            }
            elseif(ord($row{$i}) < 32) 
            {
                // <32 is not valid ascii; show these as ints (from the $ordchars array above)
                $string .= $this->highlight($ordchars{ord($row{$i})}, 32); // green
            }
            elseif(ord($row{$i}) > 126)
            {
                // >126 is not valid ascii, show these as ints with an !
                $string .= $this->highlight('!', 33); // yellow
            }
            else
            {
                $string .= $row{$i};
            }
        }
        return $string;
    }
    
    protected function highlight($s, $color=null)
    {
        return sprintf("%s[%sm%s%s[%sm", chr(27), $color ? $color : 1, $s, chr(27), 0); 
    }
}